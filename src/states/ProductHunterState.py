# import operator
# from typing import Annotated, TypedDict, List
# from typing_extensions import Literal
# from langchain_core.messages import HumanMessage, SystemMessage
# from pydantic import BaseModel, Field
# from langgraph.checkpoint.memory import MemorySaver
# from langgraph.graph import MessagesState, StateGraph
# from src.modules.Link import Link
# from src.modules.Thought import Thought
# from langchain_core.messages import BaseMessage
# from src.states.MainState import MainState


# class ProductHunterState(MainState):
#     messages: Annotated[
#         list[BaseMessage], operator.add
#     ]
#     # Links to the reports generated by workers
#     links: Annotated[
#         list[Link], operator.add
#     ]
#     chain_of_thoughts: Annotated[
#         list[Thought], operator.add
#     ]
#     tool_calls: Annotated[
#         list[BaseMessage], operator.add
#     ]
#     next_node: str
#     isHuman: bool
#     final_response: str
#     products: list[str]
